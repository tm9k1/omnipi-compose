version: "3.6"
services:
  minidlna-desktop: # for until Jellyfin's DLNA is non-spec
    container_name: mini-dlna
    image: giof71/minidlna
    env_file: .env
    user: "1000:100"
    environment:
      - "TZ=Asia/Kolkata"
      - MINIDLNA_ROOT_CONTAINER=V
      - MINIDLNA_DIR_V_1=/videos/movies
      - MINIDLNA_DIR_V_2=/videos/tvshows
      - MINIDLNA_ENABLE_INOTIFY=YES
      - MINIDLNA_FRIENDLY_NAME=OmniDLNA
      # - MINIDLNA_FORCE_SORT_CRITERIA=+upnp:class,-dc:date,+upnp:album,+upnp:originalTrackNumber,+dc:title
    volumes:
      - "${JELLYFIN_MOVIES}:/videos/movies"
      - "${JELLYFIN_TVSHOWS}:/videos/tvshows"
      - ${MINIDLNA_CONFIGS}/log:/log
      - ${MINIDLNA_CONFIGS}/db:/db
    network_mode: host
    restart: unless-stopped

  navidrome: # listen to music
    container_name: "navidrome"
    build:
      dockerfile: ./Dockerfile.navidrome
      args:
        - ${NAVIDROME_VERSION}
    env_file: .env
    environment:
      - "ND_CONFIGFILE=/navidrome.toml"
      - "XDG_RUNTIME_DIR=/tmp"
    volumes:
      - "${NAVIDROME_CONFIGS}/navidrome.toml:/navidrome.toml:ro"
      - "${NAVIDROME_CONFIGS}/data:/data"
      - "${NAVIDROME_MUSIC}:/music:ro"
      - "/run/user/${NAVIDROME_HOST_USER_ID}/pulse/native:/tmp/pulse/native"
    networks:
      - "global_docker_network"
    restart: unless-stopped

  jellyfin: # watch content
    container_name: "jellyfin"
    image: "linuxserver/jellyfin:latest"
    devices:
      - "/dev/dri/renderD128:/dev/dri/renderD128"
      - "/dev/dri/card0:/dev/dri/card0"
    group_add:
      - "122"
    env_file: .env
    environment:
      - "PUID=1000"
      - "PGID=100"
      - "TZ=Asia/Kolkata"
      - "JELLYFIN_PublishedServerUrl=${JELLYFIN_PUBLISHEDSERVERURL}"
    # ports:
    #   - 8096:8096
    volumes:
      - "${JELLYFIN_CONFIGS}:/config"
      - "${JELLYFIN_MOVIES}:/data/movies"
      - "${JELLYFIN_MUSIC}:/data/music"
      - "${JELLYFIN_TVSHOWS}:/data/tvshows"
      - "/opt/vc/lib:/opt/vc/lib"
    networks:
      - "global_docker_network"
    restart: "unless-stopped"

  jellyseerr: # request content
    container_name: jellyseerr
    image: fallenbagel/jellyseerr:latest
    env_file: .env
    environment:
      - "TZ=Asia/Kolkata"
    volumes:
      - ${JELLYSEERR_CONFIGS}:/app/config
    networks:
      - "global_docker_network"
    restart: unless-stopped

  radarr: # movies
    container_name: "radarr"
    image: "lscr.io/linuxserver/radarr:latest"
    env_file: .env
    environment:
      - "PUID=1000"
      - "PGID=100"
      - "TZ=Asia/Kolkata"
    volumes:
      - "${RADARR_CONFIGS}:/config"
      - "${RADARR_DOWNLOADS}:/downloads"
      - "${RADARR_MOVIES}:/movies"
    networks:
      - "global_docker_network"
    restart: "unless-stopped"

  sonarr: # tv shows
    container_name: "sonarr"
    image: "ghcr.io/linuxserver/sonarr:latest"
    env_file: .env
    environment:
      - "PUID=1000"
      - "PGID=100"
      - "TZ=Asia/Kolkata"
    volumes:
      - "${SONARR_CONFIGS}/config:/config"
      - "${SONARR_DOWNLOADS}:/downloads"
      - "${SONARR_TVSHOWS}:/tv"
    networks:
      - "global_docker_network"
    restart: "unless-stopped"

  bazarr: # subs
    container_name: "bazarr"
    image: "lscr.io/linuxserver/bazarr:latest"
    env_file: .env
    environment:
      - "PUID=1000"
      - "PGID=1000"
      - "TZ=Asia/Kolkata"
    volumes:
      - "/etc/container_configs/media_system/bazarr/config:/config"
      - "${BAZARR_MOVIES}:/movies"
      - "${BAZARR_TVSHOWS}:/tv"
    # ports:
    #   - 6767:6767
    networks:
      - "global_docker_network"
    restart: unless-stopped

networks:
  global_docker_network:
    external: "true"
    name: "global_docker_network"
